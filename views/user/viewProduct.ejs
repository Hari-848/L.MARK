<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Product Page</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Add any other necessary CSS/JS files -->
    
    <style>
        /* Keep the zoom functionality styles */
        #imageZoom {
            width: 100%;
            position: relative;
            cursor: zoom-in;
        }

        #imageZoom img {
            width: 100%;
            height: auto;
            object-fit: cover;
        }

        #imageZoom::after {
            display: var(--display);
            content: "";
            width: 100%;
            height: 100%;
            background-color: black;
            background-image: var(--url);
            background-size: 200%;
            background-position: var(--zoom-x) var(--zoom-y);
            position: absolute;
            left: 0;
            top: 0;
            pointer-events: none;
        }

        /* Add this to your existing styles */
        .fa-heart.fa-solid {
            color: #e53e3e;
        }
    </style>
</head>

<body class="bg-gray-100">
    <%- include("../partials/user/navbar") %>
    <div class="mt-16"></div>

    <!-- Breadcrumb -->
    <div class="bg-gray-100 pt-4">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <nav class="text-sm font-medium text-gray-500" aria-label="Breadcrumb">
                <ol class="flex items-center space-x-2">
                    <li><a href="/home" class="text-gray-800 hover:text-gray-900 transition">Home</a></li>
                    <li><span class="text-gray-400">/</span></li>
                    <li><a href="/products" class="text-gray-800 hover:text-gray-900 transition">Products</a></li>
                    <li><span class="text-gray-400">/</span></li>
                    <li class="text-gray-500"><%= product.productName %></li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- Product Details Section -->
    <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
        <div class="flex flex-wrap md:flex-nowrap">
            <div class="flex flex-col md:flex-row space-x-4">
                <!-- Thumbnails -->
                <div class="w-1/5 md:w-1/6 space-y-4">
                    <% product.imageUrl.forEach((image, index) => { %>
                        <img src="<%= image %>" 
                             alt="<%= product.productName %> Thumbnail <%= index + 1 %>"
                             class="w-full h-auto rounded-md shadow-md cursor-pointer border-2 border-transparent hover:border-gray-400"
                             onclick="updateMainImage('<%= image %>')" />
                    <% }) %>
                </div>

                <!-- Main Image with Zoom -->
                <div class="w-4/5">
                    <div id="imageZoom" class="relative" style="--url: url(<%= product.imageUrl[0] %>); --zoom-x: 0%; --zoom-y: 0%; --display: none;">
                        <img id="main-product-image" 
                             src="<%= product.imageUrl[0] %>" 
                             alt="<%= product.productName %> Main Image"
                             class="w-full h-auto rounded-md shadow-md" />
                    </div>
                </div>

                <!-- Product Info -->
                <div class="w-full md:w-2/3 md:pl-12">
                    <!-- Product Title and Wishlist -->
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-gray-800 mr-4"><%= product.productName %></h1>
                        <a href="javascript:void(0)" 
                           class="hover:text-slate-500 wishlist-button"
                           onclick="addToWishlist(event, '<%= product._id %>', '<%= product.variants[0]._id %>')">
                            <i class="fa-regular fa-heart"></i>
                        </a>
                    </div>

                    <!-- Price section -->
                    <div class="price-container mt-4">
                        <% if (product.variants && product.variants.length > 0) { %>
                            <% const selectedVariant = product.variants[0]; %>
                            
                            <!-- Offer badge -->
                            <% if (offer) { %>
                                <div class="bg-red-500 text-white px-3 py-1 rounded-full inline-block mb-2">
                                    <span class="font-bold"><%= offer.discountPercentage %>% OFF</span> - <%= offer.title %>
                                </div>
                                
                                <!-- Secondary Offer Badge -->
                                <% if (secondaryOffer) { %>
                                    <div class="bg-blue-500 text-white px-3 py-1 rounded-full inline-block mb-2 ml-2">
                                        <%= secondaryOffer.title %>
                                    </div>
                                <% } %>
                            <% } %>
                            
                            <!-- Price display -->
                            <div class="text-3xl font-bold">
                                <% if (offer) { %>
                                    <% const discountedPrice = selectedVariant.price - (selectedVariant.price * offer.discountPercentage / 100); %>
                                    <span class="text-red-600">₹<%= discountedPrice.toLocaleString() %></span>
                                    <span class="text-gray-400 line-through ml-2">₹<%= selectedVariant.price.toLocaleString() %></span>
                                <% } else { %>
                                    <span>₹<%= selectedVariant.price.toLocaleString() %></span>
                                <% } %>
                            </div>
                        <% } %>
                    </div>

                    <!-- Rating -->
                    <div class="text-yellow-500 flex items-center">
                        <i class="fa fa-star"></i>
                        <p class="mr-2 text-gray-800 font-medium variant-rating">
                            <%= product.variants[0]?.rating || 'No rating' %>
                        </p>
                    </div>

                    <!-- Stock Status -->
                    <div class="variant-stock mt-2">
                        <% if (product.variants[0].stock === 0) { %>
                            <div class="font-bold text-red-600 bg-red-100 border border-red-600 rounded-lg p-2" style="width: fit-content">
                                Out of Stock
                            </div>
                        <% } else { %>
                            <div class="text-green-500">
                                <p class="font-semibold">In stock (<%= product.variants[0].stock %> left)</p>
                            </div>
                        <% } %>
                    </div>

                   <!-- Product Description -->
                               
                   <div class="mt-6">
                    <h4 class="text-lg font-semibold text-gray-900 mb-2">Product Description</h4>
                    <div class="prose prose-sm text-gray-600">
                        <% if (product.description) { %>
                                        <p class="whitespace-pre-line"><%= product.description %></p>
                                    <% } else { %>
                                        <p class="text-gray-500">No description available</p>
                                    <% } %>
                                </div>
                            </div>

                    <!-- Variant Selection -->
                    <div class="mt-6">
                        <label for="variantType" class="block font-medium text-gray-700">Select Type</label>
                        <select id="variantType" class="mt-2 px-4 py-2 border rounded-lg shadow-sm">
                            <% product.variants.forEach(variant => { %>
                                <option value="<%= variant._id %>">
                                    <%= variant.variantType %>
                                </option>
                            <% }) %>
                        </select>
                    </div>

                    <!-- Add to Cart Button -->
                    <div class="mt-8 flex space-x-4" id="div-for-addToCart">
                        <button id="addToCartButton" 
                                class="px-6 py-3 bg-black text-white rounded-lg font-bold shadow-md hover:bg-gray-800 <%= product.variants[0].stock > 0 ? '' : 'opacity-50 cursor-not-allowed' %>"
                                <%= product.variants[0].stock > 0 ? '' : 'disabled' %>>
                            <i class="fas fa-shopping-cart mr-2"></i>
                            Add To Cart
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Products Section -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mb-12">
        <h3 class="text-2xl font-bold text-gray-900 mb-6">You may also like</h3>
        <div class="mx-4 mb-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
            <% relatedProducts.slice(0, 4).forEach(product => { %>
                <div class="bg-white rounded-lg shadow-md p-4 flex flex-col transition-transform transform hover:scale-105">
                    <a href="/product/<%= product._id %>" class="relative">
                        <img class="w-full h-48 object-cover rounded-lg mb-4" 
                             src="<%= product.imageUrl[0] %>" 
                             alt="<%= product.productName %>" />
                             
                        <!-- Display offers on related products -->
                        <% if (product.variants && product.variants.length > 0 && product.variants[0].offer) { %>
                            <div class="absolute top-2 right-2 
                                <%= product.variants[0].offer.offerType === 'Product' ? 'bg-red-500' : 'bg-blue-500' %> 
                                text-white px-2 py-1 rounded-full text-sm">
                                <%= product.variants[0].offer.discountPercentage %>% OFF
                            </div>
                            
                            <% if (product.variants[0].secondaryOffer) { %>
                                <div class="absolute top-10 right-2 
                                    <%= product.variants[0].secondaryOffer.offerType === 'Product' ? 'bg-red-500' : 'bg-blue-500' %> 
                                    text-white px-2 py-1 rounded-full text-sm">
                                    <%= product.variants[0].secondaryOffer.title %>
                                </div>
                            <% } %>
                        <% } %>
                    </a>
                    <h3 class="text-lg font-semibold text-gray-800 mb-2">
                        <%= product.productName %>
                    </h3>

                    <% if (product.variants && product.variants.length > 0 && product.variants[0].price) { %>
                        <div class="text-xl font-bold text-gray-900">
                            <!-- Show discounted price if offer exists -->
                            <% if (product.variants[0].offer && product.variants[0].offer.discountPercentage > 0) { %>
                                <% const discountedPrice = Math.round(product.variants[0].price - (product.variants[0].price * product.variants[0].offer.discountPercentage / 100)); %>
                                <span class="text-red-600">₹<%= discountedPrice.toLocaleString() %></span>
                                <span class="text-gray-400 line-through ml-2">₹<%= product.variants[0].price.toLocaleString() %></span>
                            <% } else { %>
                                ₹<%= product.variants[0].price.toLocaleString() %>
                            <% } %>
                        </div>
                    <% } else if (product.regularPrice) { %>
                        <div class="text-xl font-bold text-gray-900">
                            ₹<%= product.regularPrice.toLocaleString() %>
                        </div>
                    <% } else { %>
                        <div class="text-gray-500">Price Not Available</div>
                    <% } %>
                </div>
            <% }); %>
        </div>
    </div>

    <%- include("../partials/user/footer") %>

    <script>
        // Image zoom functionality
        const imageZoom = document.getElementById("imageZoom");

        imageZoom.addEventListener("mousemove", (event) => {
            imageZoom.style.setProperty("--display", "block");
            const pointer = {
                x: (event.offsetX * 100) / imageZoom.offsetWidth,
                y: (event.offsetY * 100) / imageZoom.offsetHeight,
            };
            imageZoom.style.setProperty("--zoom-x", pointer.x + "%");
            imageZoom.style.setProperty("--zoom-y", pointer.y + "%");
        });

        imageZoom.addEventListener("mouseout", () => {
            imageZoom.style.setProperty("--display", "none");
        });

        function updateMainImage(imageUrl) {
            const mainImage = document.getElementById("main-product-image");
            mainImage.src = imageUrl;
            imageZoom.style.setProperty("--url", `url(${imageUrl})`);
        }

        // Replace your existing click handler with this updated version
        document.getElementById("addToCartButton")?.addEventListener("click", async function() {
            console.log('Add to cart button clicked');
            
            try {
                const productId = "<%= product._id %>";
                const variantSelect = document.querySelector('select#variantType');
                console.log('Variant select element:', variantSelect);
                
                if (!variantSelect) {
                    console.error('Variant select element not found!');
                    throw new Error("Variant selection not available");
                }
                
                // If no variant is selected, try to select the first one
                if (!variantSelect.value && variantSelect.options.length > 0) {
                    variantSelect.value = variantSelect.options[0].value;
                    console.log('Auto-selected first variant:', variantSelect.value);
                }
                
                const variantId = variantSelect.value;
                console.log('Selected variant ID:', variantId);
                
                // Validate that we have a non-empty variant ID
                if (!variantId) {
                    console.error('No variant available for selection');
                    throw new Error("No variants available for this product");
                }
                
                console.log('Sending request with:', { productId, variantId, quantity: 1 });
                
                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId,
                        variantId,
                        quantity: 1
                    })
                });
                
                const data = await response.json();
                console.log('Response received:', data);
                
                if (response.ok) {
                    // Update cart count in navbar
                    const cartCountElement = document.getElementById('cartCount');
                    if (cartCountElement) {
                        cartCountElement.textContent = data.cartCount;
                        cartCountElement.classList.remove('hidden');
                    }
                    
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart',
                        text: 'Product has been added to your cart',
                        showCancelButton: true,
                        confirmButtonText: 'View Cart',
                        cancelButtonText: 'Continue Shopping'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/cart';
                        }
                    });
                } else {
                    throw new Error(data.error || 'Failed to add to cart');
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to add product to cart'
                });
            }
        });

        // Update Add to Cart button when variant changes
        document.getElementById("variantType").addEventListener("change", function() {
            const selectedId = this.value;
            const variants = JSON.parse('<%- JSON.stringify(product.variants) %>');
            const selectedVariant = variants.find(v => v._id === selectedId);
            const addToCartButton = document.getElementById("addToCartButton");
            
            if (selectedVariant && selectedVariant.stock > 0) {
                addToCartButton.classList.remove('opacity-50', 'cursor-not-allowed');
                addToCartButton.removeAttribute('disabled');
            } else {
                addToCartButton.classList.add('opacity-50', 'cursor-not-allowed');
                addToCartButton.setAttribute('disabled', '');
            }
            
            // Update variant details
            updateVariantDetails(selectedVariant);
        });

        // Add this function before the event listener for variant changes (around line 286)
        function updateVariantDetails(selectedVariant) {
            if (!selectedVariant) return;
            
            // Update price information
            document.querySelector('.variant-price').textContent = 
                `₹${selectedVariant.price ? selectedVariant.price.toLocaleString() : 'N/A'}`;
            
            // Update rating
            document.querySelector('.variant-rating').textContent = 
                selectedVariant.rating || 'No rating';
            
            // Update stock status
            const stockElement = document.querySelector('.variant-stock');
            if (selectedVariant.stock === 0) {
                stockElement.innerHTML = `
                    <div class="font-bold text-red-600 bg-red-100 border border-red-600 rounded-lg p-2" style="width: fit-content">
                        Out of Stock
                    </div>
                `;
            } else {
                stockElement.innerHTML = `
                    <div class="text-green-500">
                        <p class="font-semibold">In stock (${selectedVariant.stock} left)</p>
                    </div>
                `;
            }
        }

        // Add this function at the end of your script section
        async function addToWishlist(event, productId, variantId) {
            try {
                // Check if the item is already in wishlist (heart is solid)
                const heartIcon = event.currentTarget.querySelector('i');
                const isInWishlist = heartIcon && heartIcon.classList.contains('fa-solid');
                
                let url = isInWishlist ? `/wishlist/remove/${productId}` : '/wishlist/add';
                let method = isInWishlist ? 'DELETE' : 'POST';
                let body = null;
                
                if (!isInWishlist) {
                    body = JSON.stringify({
                        productId,
                        variantId
                    });
                }
                
                const response = await fetch(url, {
                    method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    // Toggle heart icon
                    if (heartIcon) {
                        heartIcon.classList.toggle('fa-regular');
                        heartIcon.classList.toggle('fa-solid');
                    }
                    
                    // Show success message
                    Swal.fire({
                        icon: 'success',
                        title: isInWishlist ? 'Removed from Wishlist' : 'Added to Wishlist',
                        text: isInWishlist ? 'Product has been removed from your wishlist' : 'Product has been added to your wishlist',
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to update wishlist'
                });
            }
        }
    </script>
</body>
</html>